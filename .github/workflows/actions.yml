on:
  push:
    paths-ignore:
      - "**/*.md"
  pull_request:
    paths-ignore:
        - "**/*.md"
env:
  NODE_VERSION: 14
  NPM_REGISTRY: https://registry.npmjs.org
jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.NPM_REGISTRY }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build
      - name: Run tests
        run: yarn lint && yarn tsc && yarn test

  publish:
    runs-on: ubuntu-22.04
    needs: test
    if: startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.NPM_REGISTRY }}
      - name: Install node dependencies
        run: yarn install --frozen-lockfile
      - name: Check version
        run: |
          tagName="${{github.ref_name}}"
          echo "Will publish nuget package for $tagName tag"
          # tag name starts with 'vX.Y-release' (e.g. use 'v4.2-release.1' tag for the first patch for release v4.2)
          if [[ $tagName =~ v([0-9]+\.[0-9]+)-release ]] ; then
            releaseVersion=${BASH_REMATCH[1]}
            echo "SHOULD_CREATE_RELEASE=true" >> $GITHUB_ENV
          else
            releaseVersion="${tagName:1}"
          fi
          echo "Will create release $releaseVersion for $tagName tag"
          if ! grep -Fq "\"version\": \"$releaseVersion\"" ./version.json ; then
            echo "Version in tag ($releaseVersion) does not match version in version.json"
            exit 1
          fi
      - name: Build
        run: yarn build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: |
            **/*.tgz
          if-no-files-found: error
      - name: Publish NPM
        run: |
          for file in ./dist/*.tgz; do
            echo "Will publish $file"
            npm publish $file --ignore-scripts --quiet --access public
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Create release
        uses: softprops/action-gh-release@v1
        if: ${{ env.SHOULD_CREATE_RELEASE == 'true' }}
        with:
          fail_on_unmatched_files: true
          draft: false
          prerelease: false
          files: |
            **/*.tgz
